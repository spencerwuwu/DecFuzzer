RLBOX_ROOT=/home/weicheng/Documents/CS699_WASM/rlbox_wasm2c_sandbox

#RLBOX headers
RLBOX_INCLUDE=$(RLBOX_ROOT)/build/_deps/rlbox-src/code/include

#Our Wasi-SDK
WASI_SDK_ROOT=$(RLBOX_ROOT)/build/_deps/wasiclang-src/

#location of our wasi/wasm runtime
WASM2C_RUNTIME_PATH=$(RLBOX_ROOT)/build/_deps/mod_wasm2c-src/wasm2c
WASI_RUNTIME_FILES=$(addprefix $(WASM2C_RUNTIME_PATH), /wasm-rt-impl.c)
RLBOX_RUNTIME_FILES=$(addprefix $(RLBOX_ROOT)/src, /wasm2c_rt_mem.c /wasm2c_rt_minwasi.c)

CSMITH_LIB=/home/weicheng/Documents/CS699_WASM/DecFuzzer/runtime

WASM2C=/home/weicheng/Documents/CS699_WASM/wabt/build/wasm2c
EMCC_CFLAGS=-s WASM=1 -s SIDE_MODULE=1 -g3 -w
CFLAGS=-fno-stack-protector -no-pie -O0 -w -m32 -g

W2C2 = /home/weicheng/Documents/CS699_WASM/w2c2/build/w2c2/w2c2

CC=clang
CXX=clang++

#all: {{libname}} {{libname}}.wasm {{libname}}.wasm2c.c {{libname}}.w2c2.c {{libname}}_wasm
all: {{libname}}.wasm {{libname}}.wasm2c.c {{libname}}.w2c2.c

clean:
	rm -rf {{libname}}.wasm {{libname}}.wasm.c {{libname}}.wasm.h {{libname}}_wasm {{libname}} *.o *.w2c2.* *.wasm2c.*

#Step 0: build native binary
{{libname}}: seed_for_wasm/{{libname}}.c
	$(CC) $(CFLAGS) -O{{opt}} -I$(CSMITH_LIB) seed_for_wasm/{{libname}}.c orig_main.c -o {{libname}}

#Step 1: build our library into wasm, using clang from the wasi-sdk
{{libname}}.wasm: seed_for_wasm/{{libname}}.c
	emcc $(EMCC_CFLAGS) -O{{opt}} -I$(CSMITH_LIB) seed_for_wasm/{{libname}}.c -o {{libname}}.wasm
	cp {{libname}}.wasm storage/wasm/

#Step 2: use wasm2c to convert our wasm to a C implementation of wasm we can link with our app.
{{libname}}.wasm2c.c: {{libname}}.wasm
	$(WASM2C) {{libname}}.wasm -o {{libname}}.wasm2c.c
	cp {{libname}}.wasm2c.c storage/d_wasm2c/
	cp {{libname}}.wasm2c.h storage/d_wasm2c/

#Step 2-1: use wasm2c to convert our wasm to a C implementation of wasm we can link with our app.
{{libname}}.w2c2.c: {{libname}}.wasm
	$(W2C2) {{libname}}.wasm {{libname}}.w2c2.c
	cp {{libname}}.w2c2.c storage/d_w2c2/
	cp {{libname}}.w2c2.h storage/d_w2c2/


#Step 3: (Skip) compiling and linking our application with our library
s531r2_wasm2c: s531r2.wasm2c.c
	$(CC) -c -I$(WASM_LIB) s531r2.wasm2c.c 

s531r2_w2c2: s531r2.w2c2.c
	$(CC) -c -I$(WASM_LIB) s531r2.w2c2.c -g -Wno-
